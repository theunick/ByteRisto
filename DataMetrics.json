{
  "data_metrics": {
    "total_sets": 7,
    "total_user_stories": 32,
    "sets_with_database": 5,
    "active_containers": 6,
    "database_instances": 2
  },
  "story_sets": [
    {
      "set_id": 1,
      "set_name": "Menu Management",
      "user_stories": ["1", "2", "3", "4", "5", "6", "7", "14", "15", "16", "17"],
      "links": [2, 3],
      "db": true,
      "description": "Management and display of restaurant menu items including creation, modification, categorization and viewing"
    },
    {
      "set_id": 2,
      "set_name": "Order Management",
      "user_stories": ["8", "9", "10", "11", "12", "13"],
      "links": [1, 3, 4],
      "db": true,
      "description": "Order creation, modification and tracking by waiters including table management and timing"
    },
    {
      "set_id": 3,
      "set_name": "Kitchen Operations",
      "user_stories": ["18", "19", "20", "21", "22"],
      "links": [2, 4],
      "db": true,
      "description": "Kitchen workflow management including order queue, preparation status and completion tracking"
    },
    {
      "set_id": 4,
      "set_name": "Payment Processing",
      "user_stories": ["23", "24", "25", "26", "27"],
      "links": [2, 3],
      "db": true,
      "description": "Payment transaction management for completed orders including cash and card processing"
    },
    {
      "set_id": 5,
      "set_name": "Management Reporting",
      "user_stories": ["28", "29"],
      "links": [2, 4],
      "db": true,
      "description": "Management dashboard and analytics for order flow monitoring and historical data access"
    },
    {
      "set_id": 6,
      "set_name": "System Management",
      "user_stories": ["30", "31"],
      "links": [1, 2, 7],
      "db": false,
      "description": "System-level functionality for data refresh and real-time updates"
    },
    {
      "set_id": 7,
      "set_name": "User Interface",
      "user_stories": ["32"],
      "links": [1, 2, 3, 4, 5, 6],
      "db": false,
      "description": "User interface and role switching functionality for system navigation"
    }
  ],
  "architectural_mapping": {
    "containers": [
      {
        "container_name": "menu-inventory-service",
        "sets": [1],
        "microservice_type": "business_logic_with_db",
        "database_required": true,
        "database": "postgres-menu (Port 5432)"
      },
      {
        "container_name": "order-management-service",
        "sets": [2, 3, 4],
        "microservice_type": "business_logic_with_db",
        "database_required": true,
        "database": "postgres-orders (Port 5433)"
      },
      {
        "container_name": "frontend",
        "sets": [6, 7],
        "microservice_type": "user_interface",
        "database_required": false,
        "technology": "React + Nginx"
      },
      {
        "container_name": "api-gateway",
        "sets": [],
        "microservice_type": "gateway",
        "database_required": false,
        "technology": "Flask",
        "description": "Routes requests to Menu and Order services"
      }
    ],
    "removed_components": [
      "RabbitMQ - Message queue not used in simplified architecture",
      "Redis - Caching layer not implemented",
      "Authentication Service - Role-based UI only, no backend auth"
    ]
  }
}
